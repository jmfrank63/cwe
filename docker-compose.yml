version: "3"
services:
  db:
    build:
      context: .
      dockerfile: ./db/postgres/Dockerfile
    container_name: pgdb
    env_file:
      - ./db/.env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ${LOCAL_CERT_PATH:-${HOME}/.local/ssl/certs/cwe/cwe.crt}:/etc/ssl/private/server.crt:ro
      - ${LOCAL_KEY_PATH:-${HOME}/.local/ssl/certs/cwe/cwe.key}:/etc/ssl/private/server.key:ro
      - ./db/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro

  server:
    container_name: web-server
    build:
      context: .
      dockerfile: ./server/Dockerfile
    restart: always
    depends_on:
      - db
    env_file: ./server/.env
    ports:
      - "8443:8443"
    volumes:
      - ${LOCAL_CERT_PATH:-${HOME}/.local/ssl/certs/cwe/cwe.crt}:/etc/ssl/private/server.crt:ro
      - ${LOCAL_KEY_PATH:-${HOME}/.local/ssl/certs/cwe/cwe.key}:/etc/ssl/private/server.key:ro
      - ./server/.env:/usr/src/app/.env:ro

  haproxy:
    container_name: haproxy
    build:
      context: ./haproxy
      dockerfile: Dockerfile
    env_file: ./haproxy/.env
    restart: always
    ports:
      - "443:443"
      - "8444:8444"
    depends_on:
      - server
    volumes:
      - ${LOCAL_PEM_PATH:-${HOME}/.local/ssl/certs/cwe/admin.pem}:/etc/ssl/private/admin.pem
volumes:
  pgdata:
